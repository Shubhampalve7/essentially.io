{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./Services/stock-list.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction AppComponent_tr_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const stock_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(stock_r1 == null ? null : stock_r1.T);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(stock_r1 == null ? null : stock_r1.h);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(stock_r1 == null ? null : stock_r1.l);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(stock_r1 == null ? null : stock_r1.l);\n  }\n}\nclass AppComponent {\n  constructor(StockListService) {\n    this.StockListService = StockListService;\n    this.title = 'Stock-Market-UI';\n  }\n  ngOnInit() {\n    this.StockListService.getStockLlist().subscribe(response => {\n      this.globalStockList = response?.results.slice(0, 50);\n      this.stockList = this.globalStockList;\n      console.log('response', this.stockList);\n    });\n  }\n  getDaataAsUserInserted() {\n    console.log('User input:', this.userInput);\n    this.stockList = this.globalStockList;\n    this.stockList = this.stockList?.slice(0, this.userInput);\n  }\n  static #_ = this.ɵfac = function AppComponent_Factory(t) {\n    return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.StockListService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AppComponent,\n    selectors: [[\"app-root\"]],\n    decls: 24,\n    vars: 2,\n    consts: [[1, \"container\"], [1, \"row\"], [1, \"col-8\"], [\"type\", \"text\", \"placeholder\", \"Enter your text\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [1, \"col-4\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", \"float-right\", 3, \"click\"], [1, \"table\", \"table-striped\"], [4, \"ngFor\", \"ngForOf\"]],\n    template: function AppComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\");\n        i0.ɵɵtext(2, \"Stock List\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 1)(4, \"div\", 2)(5, \"input\", 3);\n        i0.ɵɵlistener(\"ngModelChange\", function AppComponent_Template_input_ngModelChange_5_listener($event) {\n          return ctx.userInput = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(6, \"div\", 4)(7, \"button\", 5);\n        i0.ɵɵlistener(\"click\", function AppComponent_Template_button_click_7_listener() {\n          return ctx.getDaataAsUserInserted();\n        });\n        i0.ɵɵtext(8, \"Refresh Data\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(9, \"table\", 6)(10, \"thead\")(11, \"tr\")(12, \"th\");\n        i0.ɵɵtext(13, \"Exchange Symbol\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"th\");\n        i0.ɵɵtext(15, \"Today's High Price\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"th\");\n        i0.ɵɵtext(17, \"Todays's Low price\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"th\");\n        i0.ɵɵtext(19, \"Today's volume\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"th\");\n        i0.ɵɵtext(21, \"Today's High Price\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(22, \"tbody\");\n        i0.ɵɵtemplate(23, AppComponent_tr_23_Template, 9, 4, \"tr\", 7);\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngModel\", ctx.userInput);\n        i0.ɵɵadvance(18);\n        i0.ɵɵproperty(\"ngForOf\", ctx.stockList);\n      }\n    },\n    dependencies: [i2.NgForOf, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgModel],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}\nexport { AppComponent };","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","stock_r1","T","h","l","AppComponent","constructor","StockListService","title","ngOnInit","getStockLlist","subscribe","response","globalStockList","results","slice","stockList","console","log","getDaataAsUserInserted","userInput","_","ɵɵdirectiveInject","i1","_2","selectors","decls","vars","consts","template","AppComponent_Template","rf","ctx","ɵɵlistener","AppComponent_Template_input_ngModelChange_5_listener","$event","AppComponent_Template_button_click_7_listener","ɵɵtemplate","AppComponent_tr_23_Template","ɵɵproperty"],"sources":["/home/shubham/essentially.frontend/src/app/app.component.ts","/home/shubham/essentially.frontend/src/app/app.component.html"],"sourcesContent":["import { Component } from '@angular/core';\n\nimport { StockListService } from './Services/stock-list.service';\nimport { subscribeOn } from 'rxjs';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  title = 'Stock-Market-UI';\n\n  constructor(private StockListService: StockListService) {}\n\n  globalStockList :any \n  stockList: any;\n  userInput:any;\n\n  ngOnInit() {\n    this.StockListService.getStockLlist().subscribe((response) => {\n      this.globalStockList = response?.results.slice(0, 50);\n      this.stockList = this.globalStockList;\n      console.log('response', this.stockList);\n    });\n  }\n\n  getDaataAsUserInserted() {\n    console.log('User input:', this.userInput);\n    this.stockList = this.globalStockList\n    this.stockList =  this.stockList?.slice(0, this.userInput);\n  }\n}\n","\n<div class=\"container\">\n    <h1>Stock List</h1>\n  <div class=\"row\">\n    <div class=\"col-8\">\n      <input type=\"text\" class=\"form-control\" [(ngModel)]=\"userInput\" placeholder=\"Enter your text\">\n    </div>\n    <div class=\"col-4\">\n      <button type=\"button\" class=\"btn btn-primary float-right\" (click)=\"getDaataAsUserInserted()\">Refresh Data</button>\n    </div>\n  </div>\n  <table class=\"table table-striped\">\n    <thead>\n      <tr>\n        <th>Exchange Symbol</th>\n        <th>Today's High Price</th>\n        <th>Todays's Low price</th>\n        <th>Today's volume</th>\n        <th>Today's High Price</th>\n        <!-- Add more table headers based on your API data -->\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let stock of stockList\">\n        <td>{{ stock?.T }}</td>\n        <td>{{ stock?.h }}</td>\n        <td>{{ stock?.l }}</td>\n        <td>{{ stock?.l }}</td>\n        <!-- Add more table columns based on your API data -->\n      </tr>\n    </tbody>\n  </table>\n</div>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}